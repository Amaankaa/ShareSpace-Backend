// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mentorshippkg "github.com/Amaankaa/Blog-Starter-Project/Domain/mentorship"
	mock "github.com/stretchr/testify/mock"
)

// INotificationService is an autogenerated mock type for the INotificationService type
type INotificationService struct {
	mock.Mock
}

// SendMentorshipNotification provides a mock function with given fields: ctx, notification
func (_m *INotificationService) SendMentorshipNotification(ctx context.Context, notification mentorshippkg.MentorshipNotification) error {
	ret := _m.Called(ctx, notification)

	if len(ret) == 0 {
		panic("no return value specified for SendMentorshipNotification")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, mentorshippkg.MentorshipNotification) error); ok {
		r0 = rf(ctx, notification)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewINotificationService creates a new instance of INotificationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewINotificationService(t interface {
	mock.TestingT
	Cleanup(func())
}) *INotificationService {
	mock := &INotificationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
